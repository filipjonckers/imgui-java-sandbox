import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'idea'
}

version '1.0'
sourceCompatibility = 1.11

project.ext.lwjglVersion = "3.2.3"
project.ext.imguiVersion = '1.79-1.4.0'
project.ext.jomlVersion = "1.9.25"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = 'natives-linux'
        project.ext.imguiNatives = "imgui-java-natives-linux"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
        project.ext.imguiNatives = System.getProperty("os.arch").contains("64") ? "imgui-java-natives-windows" : "imgui-java-natives-windows-x86"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = 'natives-macos'
        project.ext.imguiNatives = "imgui-java-natives-macos"
        // jvmargs = "-XstartOnFirstThread";
        break
}

repositories {
    jcenter()
    mavenCentral()
}

sourceSets.main { output.setResourcesDir(java.outputDir) }


idea {
    module {
        inheritOutputDirs = true
    }
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    ['', '-glfw', '-opengl', '-openal', '-stb'].each {
        implementation "org.lwjgl:lwjgl$it:$lwjglVersion"
        runtimeOnly "org.lwjgl:lwjgl$it::$lwjglNatives"
    }

    implementation "io.imgui.java:imgui-java-binding:$imguiVersion"
    implementation "io.imgui.java:imgui-java-lwjgl3:$imguiVersion"
    runtimeOnly "io.imgui.java:$imguiNatives:$imguiVersion"

    implementation "org.joml:joml:${jomlVersion}"
}

task start(type: JavaExec, dependsOn: build) {
    main = 'Main'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Djava.library.path=${System.getProperty('libPath', '../bin')}"]

    if (OperatingSystem.current().isMacOsX()) {
        jvmArgs += ['-XstartOnFirstThread', '-Djava.awt.headless=true']
    }
}
